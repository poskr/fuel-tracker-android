name: Build & Release APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Клонируем репозиторий (включая app.zip в корне)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Распаковываем app.zip
      - name: Extract app.zip
        run: |
          if [ -f "app.zip" ]; then
            unzip -o app.zip -d app_src
            mv app_src/* .
          else
            echo "❌ app.zip не найден в корне репозитория!"
            exit 1
          fi

      # 3) Устанавливаем системные зависимости + pip3
      - name: Install system deps
        run: |
          sudo apt update
          sudo apt install -y \
            openjdk-11-jdk \
            wget unzip zip \
            python3-pip \
            build-essential \
            libssl-dev libffi-dev \
            zlib1g-dev libncurses5-dev libbz2-dev liblzma-dev

      # 4) Устанавливаем Buildozer и Python-библиотеки через pip3
      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install --user buildozer cython kivy requests
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      # 5) Скачиваем Android SDK command-line tools и принимаем лицензии
      - name: Install Android SDK + accept licenses
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q sdk.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest

          export ANDROID_SDK_ROOT=$HOME/android-sdk
          # Добавляем инструменты SDK в PATH для этого шага
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/30.0.3:$PATH

          # Принимаем все лицензии
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

          # Устанавливаем необходимые компоненты
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-30" \
            "build-tools;30.0.3"

          # Проверяем, что aidl доступен (из build-tools)
          if ! command -v aidl >/dev/null 2>&1; then
            echo "❗ aidl не найден, скачиваю платформ-tools..."
            wget https://dl.google.com/android/repository/platform-tools_r33.0.2-linux.zip -O plat-tools.zip
            unzip -q plat-tools.zip -d $ANDROID_SDK_ROOT/platform-tools
          fi
          aidl --help

      # 6) Сборка APK через Buildozer
      - name: Build APK
        env:
          ANDROIDSDK: $HOME/android-sdk
          PATH: |
            $HOME/.local/bin:
            $HOME/android-sdk/build-tools/30.0.3:
            $HOME/android-sdk/platform-tools:
            $PATH
        run: |
          buildozer init || true
          buildozer -v android debug

      # 7) Загрузка собранного APK как артефакт
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: FuelTracker-APK
          path: bin/*.apk
